migrations
----------
apply migrations : rake db:migrate
roolback migrations : rake db:rollback

Generators
----------
Create a migration : rails generate migration add_password_digest_to_users password_digest:string
Create request test : rails generate integration_test <controller_name> --integration-tool=rspec

synch test db with dev DB (in terms of structure)
-------------------------------------------------
rake db:test:prepare

load Fake data in dev DB
------------------------
rake db:(re)seed

Generate bundler stubs
----------------------
bundle --binstubs=./bundler_stubs

Switch OS
---------
rake refresh_ws:<OS>

Annotate models / routes
------------------------
annotate -p before (--model-dir dir)
annotate -r

Tests & code metrics
--------------------
rails_best_practices -f html .

Heroku commands
---------------
heroku create --stack cedar
git push heroku master
git push heroku
heroku logs
heroku config:add RECAPTCHA_PUBLIC_KEY=''
heroku config:add RECAPTCHA_PRIVATE_KEY=''
heroku pg:reset (to drop / create db)

GIT
---
go back to last commit : 												git reset --hard HEAD
remove untracked files (but not ignored files) :git clean -f -d
get a new branch from GitHub : 									git checkout -b <branch> origin/<branch>
remove uncommited changes on a single file : 		git checkout -- <filename>
push a new branch to GitHub : 									git push origin <branch>
merge a branch (checkout the main first) :			git merge <branch>
delete a branch (locally) :											git branch -D <branch>
delete a branch (on GitHub) :										git push origin --delete <branch>
Tag with Git :																	git tag -a v1.4 -m 'my version 1.4'
Create a branch to track a remote : 						git checkout --track -b v0.5_dev origin/v0.5_dev

Production
----------
bundle exec rake:* RAILS_ENV=production
bundle exec rake i18n:js:export
assets pre-compilation : bundle exec rake assets:precompile
rails s -e production
rake maintenance:start reason="Someone told me I should type <code>sudo rm -rf /</code>" allowed_paths="^/help,^/contact_us" allowed_ips="127.0.0.1,192.168.0.0/24"
rake maintenance:end

To be automated
---------------
#Remove the carrierwave upload files older than one day :
CarrierWave.clean_cached_files!

#recreate versions for fog storage
YourModel.all.each do |ym|
  begin
    ym.your_uploader.cache_stored_file!
    ym.your_uploader.retrieve_from_cache!(ym.your_uploader.cache_name)
    ym.your_uploader.recreate_versions!
    ym.save!
  rescue => e
    puts  "ERROR: #{CLASS}: #{object.id} -> #{e.to_s}"
  end
end

To get rid off BusyException:
-----------------------------
ActiveRecord::Base.connection.execute("BEGIN TRANSACTION; END;")